"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./lib/apiCore.js":
/*!************************!*\
  !*** ./lib/apiCore.js ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   getJSON: function() { return /* binding */ getJSON; },\n/* harmony export */   getText: function() { return /* binding */ getText; },\n/* harmony export */   postJSON: function() { return /* binding */ postJSON; }\n/* harmony export */ });\n/**\n * Author: Dr. Martín Raskovsky\n * Date: April 2025\n *\n * apiCore.js\n *\n * Provides shared low-level GET and POST wrappers for all API requests.\n * Includes optional debug logging and centralized error handling.\n */ const DEBUG = false;\n/**\n * Helper to log debug output.\n */ function log() {\n    for(var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++){\n        args[_key] = arguments[_key];\n    }\n    if (DEBUG) console.log(\"[API]\", ...args);\n}\n/**\n * Performs a GET request and returns parsed JSON.\n * @param {string} url\n */ async function getJSON(url) {\n    log(\"GET \".concat(url));\n    const res = await fetch(url);\n    const json = await res.json();\n    const isSuccess = json && json.success !== false && !json.error;\n    log(\"← \".concat(url), isSuccess ? \"✅ success\" : \"❌ error\");\n    //log(json); // Uncomment for full response\n    return json;\n}\n/**\n * Performs a POST request with JSON payload and returns parsed JSON.\n * @param {string} url\n * @param {object} body\n */ async function postJSON(url, body) {\n    log(\"POST \".concat(url), body);\n    const res = await fetch(url, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n    });\n    const json = await res.json();\n    const isSuccess = json && json.success !== false && !json.error;\n    log(\"← \".concat(url), isSuccess ? \"✅ success\" : \"❌ error\");\n    //log(json); // Uncomment for full response\n    return json;\n}\n/**\n * Performs a GET request and returns raw text (e.g., for HTML).\n * @param {string} url\n */ async function getText(url) {\n    log(\"GET TEXT \".concat(url));\n    const res = await fetch(url);\n    const text = await res.text();\n    // Convention: Treat any non-200 as failure, but don't throw\n    const isSuccess = res.ok && text && text.trim().length > 0;\n    log(\"← \".concat(url), isSuccess ? \"✅ \".concat(text.length, \" bytes\") : \"❌ error or empty\");\n    //log(text); // Uncomment for full response\n    return text;\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2xpYi9hcGlDb3JlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7Ozs7OztDQVFDLEdBRUQsTUFBTUEsUUFBUTtBQUVkOztDQUVDLEdBQ0QsU0FBU0M7SUFBSTtRQUFHQyxLQUFILHVCQUFPOztJQUNsQixJQUFJRixPQUFPRyxRQUFRRixHQUFHLENBQUMsWUFBWUM7QUFDckM7QUFFQTs7O0NBR0MsR0FDTSxlQUFlRSxRQUFRQyxHQUFHO0lBQy9CSixJQUFJLE9BQVcsT0FBSkk7SUFDWCxNQUFNQyxNQUFNLE1BQU1DLE1BQU1GO0lBQ3hCLE1BQU1HLE9BQU8sTUFBTUYsSUFBSUUsSUFBSTtJQUMzQixNQUFNQyxZQUFZRCxRQUFRQSxLQUFLRSxPQUFPLEtBQUssU0FBUyxDQUFDRixLQUFLRyxLQUFLO0lBQy9EVixJQUFJLEtBQVMsT0FBSkksTUFBT0ksWUFBWSxjQUFjO0lBQzFDLDJDQUEyQztJQUMzQyxPQUFPRDtBQUNUO0FBRUE7Ozs7Q0FJQyxHQUNNLGVBQWVJLFNBQVNQLEdBQUcsRUFBRVEsSUFBSTtJQUN0Q1osSUFBSSxRQUFZLE9BQUpJLE1BQU9RO0lBQ25CLE1BQU1QLE1BQU0sTUFBTUMsTUFBTUYsS0FBSztRQUMzQlMsUUFBUTtRQUNSQyxTQUFTO1lBQUUsZ0JBQWdCO1FBQW1CO1FBQzlDRixNQUFNRyxLQUFLQyxTQUFTLENBQUNKO0lBQ3ZCO0lBQ0EsTUFBTUwsT0FBTyxNQUFNRixJQUFJRSxJQUFJO0lBQzNCLE1BQU1DLFlBQVlELFFBQVFBLEtBQUtFLE9BQU8sS0FBSyxTQUFTLENBQUNGLEtBQUtHLEtBQUs7SUFDL0RWLElBQUksS0FBUyxPQUFKSSxNQUFPSSxZQUFZLGNBQWM7SUFDMUMsMkNBQTJDO0lBQzNDLE9BQU9EO0FBQ1Q7QUFFQTs7O0NBR0MsR0FDTSxlQUFlVSxRQUFRYixHQUFHO0lBQy9CSixJQUFJLFlBQWdCLE9BQUpJO0lBQ2hCLE1BQU1DLE1BQU0sTUFBTUMsTUFBTUY7SUFDeEIsTUFBTWMsT0FBTyxNQUFNYixJQUFJYSxJQUFJO0lBRTNCLDREQUE0RDtJQUM1RCxNQUFNVixZQUFZSCxJQUFJYyxFQUFFLElBQUlELFFBQVFBLEtBQUtFLElBQUksR0FBR0MsTUFBTSxHQUFHO0lBQ3pEckIsSUFBSSxLQUFTLE9BQUpJLE1BQU9JLFlBQVksS0FBaUIsT0FBWlUsS0FBS0csTUFBTSxFQUFDLFlBQVU7SUFDdkQsMkNBQTJDO0lBQzNDLE9BQU9IO0FBQ1QiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbGliL2FwaUNvcmUuanM/NDdmOSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEF1dGhvcjogRHIuIE1hcnTDrW4gUmFza292c2t5XG4gKiBEYXRlOiBBcHJpbCAyMDI1XG4gKlxuICogYXBpQ29yZS5qc1xuICpcbiAqIFByb3ZpZGVzIHNoYXJlZCBsb3ctbGV2ZWwgR0VUIGFuZCBQT1NUIHdyYXBwZXJzIGZvciBhbGwgQVBJIHJlcXVlc3RzLlxuICogSW5jbHVkZXMgb3B0aW9uYWwgZGVidWcgbG9nZ2luZyBhbmQgY2VudHJhbGl6ZWQgZXJyb3IgaGFuZGxpbmcuXG4gKi9cblxuY29uc3QgREVCVUcgPSBmYWxzZTtcblxuLyoqXG4gKiBIZWxwZXIgdG8gbG9nIGRlYnVnIG91dHB1dC5cbiAqL1xuZnVuY3Rpb24gbG9nKC4uLmFyZ3MpIHtcbiAgaWYgKERFQlVHKSBjb25zb2xlLmxvZygnW0FQSV0nLCAuLi5hcmdzKTtcbn1cblxuLyoqXG4gKiBQZXJmb3JtcyBhIEdFVCByZXF1ZXN0IGFuZCByZXR1cm5zIHBhcnNlZCBKU09OLlxuICogQHBhcmFtIHtzdHJpbmd9IHVybFxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gZ2V0SlNPTih1cmwpIHtcbiAgbG9nKGBHRVQgJHt1cmx9YCk7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHVybCk7XG4gIGNvbnN0IGpzb24gPSBhd2FpdCByZXMuanNvbigpO1xuICBjb25zdCBpc1N1Y2Nlc3MgPSBqc29uICYmIGpzb24uc3VjY2VzcyAhPT0gZmFsc2UgJiYgIWpzb24uZXJyb3I7XG4gIGxvZyhg4oaQICR7dXJsfWAsIGlzU3VjY2VzcyA/ICfinIUgc3VjY2VzcycgOiAn4p2MIGVycm9yJyk7XG4gIC8vbG9nKGpzb24pOyAvLyBVbmNvbW1lbnQgZm9yIGZ1bGwgcmVzcG9uc2VcbiAgcmV0dXJuIGpzb247XG59XG5cbi8qKlxuICogUGVyZm9ybXMgYSBQT1NUIHJlcXVlc3Qgd2l0aCBKU09OIHBheWxvYWQgYW5kIHJldHVybnMgcGFyc2VkIEpTT04uXG4gKiBAcGFyYW0ge3N0cmluZ30gdXJsXG4gKiBAcGFyYW0ge29iamVjdH0gYm9keVxuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gcG9zdEpTT04odXJsLCBib2R5KSB7XG4gIGxvZyhgUE9TVCAke3VybH1gLCBib2R5KTtcbiAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsLCB7XG4gICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgaGVhZGVyczogeyAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nIH0sXG4gICAgYm9keTogSlNPTi5zdHJpbmdpZnkoYm9keSksXG4gIH0pO1xuICBjb25zdCBqc29uID0gYXdhaXQgcmVzLmpzb24oKTtcbiAgY29uc3QgaXNTdWNjZXNzID0ganNvbiAmJiBqc29uLnN1Y2Nlc3MgIT09IGZhbHNlICYmICFqc29uLmVycm9yO1xuICBsb2coYOKGkCAke3VybH1gLCBpc1N1Y2Nlc3MgPyAn4pyFIHN1Y2Nlc3MnIDogJ+KdjCBlcnJvcicpO1xuICAvL2xvZyhqc29uKTsgLy8gVW5jb21tZW50IGZvciBmdWxsIHJlc3BvbnNlXG4gIHJldHVybiBqc29uO1xufVxuXG4vKipcbiAqIFBlcmZvcm1zIGEgR0VUIHJlcXVlc3QgYW5kIHJldHVybnMgcmF3IHRleHQgKGUuZy4sIGZvciBIVE1MKS5cbiAqIEBwYXJhbSB7c3RyaW5nfSB1cmxcbiAqL1xuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGdldFRleHQodXJsKSB7XG4gIGxvZyhgR0VUIFRFWFQgJHt1cmx9YCk7XG4gIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKHVybCk7XG4gIGNvbnN0IHRleHQgPSBhd2FpdCByZXMudGV4dCgpO1xuXG4gIC8vIENvbnZlbnRpb246IFRyZWF0IGFueSBub24tMjAwIGFzIGZhaWx1cmUsIGJ1dCBkb24ndCB0aHJvd1xuICBjb25zdCBpc1N1Y2Nlc3MgPSByZXMub2sgJiYgdGV4dCAmJiB0ZXh0LnRyaW0oKS5sZW5ndGggPiAwO1xuICBsb2coYOKGkCAke3VybH1gLCBpc1N1Y2Nlc3MgPyBg4pyFICR7dGV4dC5sZW5ndGh9IGJ5dGVzYCA6ICfinYwgZXJyb3Igb3IgZW1wdHknKTtcbiAgLy9sb2codGV4dCk7IC8vIFVuY29tbWVudCBmb3IgZnVsbCByZXNwb25zZVxuICByZXR1cm4gdGV4dDtcbn1cblxuIl0sIm5hbWVzIjpbIkRFQlVHIiwibG9nIiwiYXJncyIsImNvbnNvbGUiLCJnZXRKU09OIiwidXJsIiwicmVzIiwiZmV0Y2giLCJqc29uIiwiaXNTdWNjZXNzIiwic3VjY2VzcyIsImVycm9yIiwicG9zdEpTT04iLCJib2R5IiwibWV0aG9kIiwiaGVhZGVycyIsIkpTT04iLCJzdHJpbmdpZnkiLCJnZXRUZXh0IiwidGV4dCIsIm9rIiwidHJpbSIsImxlbmd0aCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/apiCore.js\n"));

/***/ })

});