#!/usr/bin/env node

/**
 * constants.generated.js
 *
 * GENERATED FILE — DO NOT EDIT BY HAND
 * Generated by generate_constants.js from section-config.js
 *
 * Author: Dr. Martín Raskovsky
 * Date: April 2025
 */

// Networks
const NET_VTRU = "VTRU";
const NET_ETH = "ETH";
const NET_BSC = "BSC";
const NET_POL = "POL";
const NET_SOL = "SOL";
const NET_TEZ = "TEZ";
const NET_ARB = "ARB";
const NET_OPT = "OPT";
const NET_BASE = "BASE";
const NET_AVAX = "AVAX";

// Native Coins
const SEC_VTRU = "VTRU";
const SEC_ETH = "ETH";
const SEC_BNB = "BNB";
const SEC_POL = "POL";
const SEC_SOL = "SOL";
const SEC_TEZ = "TEZ";

// VTRU Bridged
const SEC_VTRU_ETH = "VTRU on ETH";
const SEC_VTRU_BSC = "VTRU on BSC";

// USDC
const SEC_USDC_VTRU = "USDC on VTRU(USDC.pol)";
const SEC_USDC_ETH = "USDC on Ethereum";
const SEC_USDC_BSC = "USDC on BNB Chain";
const SEC_USDC_POL = "USDC on Polygon";
const SEC_USDC_SOL = "USDC on Solana";
const SEC_USDC_ARB = "USDC on Arbitrum";
const SEC_USDC_OPT = "USDC on Optimism";
const SEC_USDC_BASE = "USDC on Base";
const SEC_USDC_AVAX = "USDC on Avalanche";

// Staked
const SEC_VTRU_STAKED = "VTRU Staked";
const SEC_SEVOX_STAKED = "SEVO-X Staked";

// Vitruveo Coins & Tokens
const SEC_VERSE = "VERSE";
const SEC_VIBE = "VIBE";
const SEC_VORTEX = "VORTEX";
const SEC_VTRO = "VTRO";
const SEC_VUSD = "VUSD";
const SEC_WVTRU = "wVTRU";

// Sabong
const SEC_SEVO = "SEVO";
const SEC_SEVOX = "SEVO-X";

// Vitruveo Exchange
const SEC_V3DEX = "V3DEX";
const SEC_VITDEX = "VITDEX";

// Section mapping for summary with subsections
const sectionSummary = [
  { name: "Native Coins", sections: [SEC_VTRU, SEC_ETH, SEC_BNB, SEC_POL, SEC_SOL, SEC_TEZ] },
  { name: "VTRU Bridged", sections: [SEC_VTRU_ETH, SEC_VTRU_BSC] },
  { name: "USDC", sections: [SEC_USDC_VTRU, SEC_USDC_ETH, SEC_USDC_BSC, SEC_USDC_POL, SEC_USDC_SOL, SEC_USDC_ARB, SEC_USDC_OPT, SEC_USDC_BASE, SEC_USDC_AVAX] },
  { name: "Staked", sections: [SEC_VTRU_STAKED, SEC_SEVOX_STAKED] },
  { name: "Vitruveo Coins & Tokens", sections: [SEC_VERSE, SEC_VIBE, SEC_VORTEX, SEC_VTRO, SEC_VUSD, SEC_WVTRU] },
  { name: "Sabong", sections: [SEC_SEVO, SEC_SEVOX] },
  { name: "Vitruveo Exchange", sections: [SEC_V3DEX, SEC_VITDEX] },
];

// Mapping of network codes to full labels
const networkLabels = {
  "VTRU": "Vitruveo",
  "ETH": "Ethereum",
  "BSC": "BNB Chain",
  "POL": "Polygon",
  "SOL": "Solana",
  "TEZ": "Tezos",
  "ARB": "Arbitrum",
  "OPT": "Optimism",
  "BASE": "Base",
  "AVAX": "Avalanche",
};

// Section mapping for details popups
const detailType = {
  [SEC_VTRU_STAKED]: "stake",
  [SEC_SEVOX_STAKED]: "bsc",
  [SEC_VIBE]: "vibe",
  [SEC_VORTEX]: "vortex",
};

// These grouping defs are needed also in perl-lib/Defs.pm: %group_type_map
const hasGroups = {
  [SEC_VTRU_STAKED]: true,
  [SEC_SEVOX_STAKED]: true,
};

if (typeof module !== 'undefined' && module.exports) {
  module.exports = {
    SEC_VTRU,
    SEC_ETH,
    SEC_BNB,
    SEC_POL,
    SEC_SOL,
    SEC_TEZ,
    SEC_VTRU_ETH,
    SEC_VTRU_BSC,
    SEC_USDC_VTRU,
    SEC_USDC_ETH,
    SEC_USDC_BSC,
    SEC_USDC_POL,
    SEC_USDC_SOL,
    SEC_USDC_ARB,
    SEC_USDC_OPT,
    SEC_USDC_BASE,
    SEC_USDC_AVAX,
    SEC_VTRU_STAKED,
    SEC_SEVOX_STAKED,
    SEC_VERSE,
    SEC_VIBE,
    SEC_VORTEX,
    SEC_VTRO,
    SEC_VUSD,
    SEC_WVTRU,
    SEC_SEVO,
    SEC_SEVOX,
    SEC_V3DEX,
    SEC_VITDEX,
    NET_VTRU,
    NET_ETH,
    NET_BSC,
    NET_POL,
    NET_SOL,
    NET_TEZ,
    NET_ARB,
    NET_OPT,
    NET_BASE,
    NET_AVAX,
    detailType,
    hasGroups,
    sectionSummary
  };
}

if (typeof window !== "undefined") {
  window.constants = {
    SEC_VTRU,
    SEC_ETH,
    SEC_BNB,
    SEC_POL,
    SEC_SOL,
    SEC_TEZ,
    SEC_VTRU_ETH,
    SEC_VTRU_BSC,
    SEC_USDC_VTRU,
    SEC_USDC_ETH,
    SEC_USDC_BSC,
    SEC_USDC_POL,
    SEC_USDC_SOL,
    SEC_USDC_ARB,
    SEC_USDC_OPT,
    SEC_USDC_BASE,
    SEC_USDC_AVAX,
    SEC_VTRU_STAKED,
    SEC_SEVOX_STAKED,
    SEC_VERSE,
    SEC_VIBE,
    SEC_VORTEX,
    SEC_VTRO,
    SEC_VUSD,
    SEC_WVTRU,
    SEC_SEVO,
    SEC_SEVOX,
    SEC_V3DEX,
    SEC_VITDEX,
    NET_VTRU,
    NET_ETH,
    NET_BSC,
    NET_POL,
    NET_SOL,
    NET_TEZ,
    NET_ARB,
    NET_OPT,
    NET_BASE,
    NET_AVAX,
    detailType,
    hasGroups,
    sectionSummary
  };
}